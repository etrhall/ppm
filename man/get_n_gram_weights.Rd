% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get-n-gram-weights.R
\name{get_n_gram_weights}
\alias{get_n_gram_weights}
\title{Get n-gram weights}
\usage{
get_n_gram_weights(mod, order, pos = 1L, time = 0, zero_indexed = FALSE)
}
\arguments{
\item{mod}{A PPM model object as produced by (for example)
\code{\link{new_ppm_simple}} or \code{\link{new_ppm_decay}},
and subsequently trained on input sequences using \code{\link{model_seq}}.}

\item{order}{(Integerish scalar)
The order (i.e. number of symbols) of the n-grams to retrieve.}

\item{pos}{(Integerish scalar)
The nominal 'position' at which the n-gram counts are retrieved
(only relevant for decay-based models).}

\item{time}{(Numeric scalar)
The nominal 'time' at which the n-grams are retrieved
(only relevant for decay-based models).}

\item{zero_indexed}{(Logical scalar)
Whether the n-grams should be presented as zero-indexed (as opposed to one-indexed)
integer vectors.}
}
\value{
Returns a \code{\link[tibble]{tibble}} where each row corresponds to an n-gram.
These n-grams are exhaustively enumerated from all possible symbols drawn from the model's alphabet.
The tibble contains n columns \code{elt_1}, \code{elt_1}, ... \code{elt_n},
corresponding to the n symbols in the n-gram,
and a column \code{weight}, identifying the weight of the specified n-gram.
}
\description{
Tabulates weights for all possible n-grams of a given order.
}
